---
- hosts: master
  become: true
  gather_facts: no
#  vars:
 #   pairKeys:
  #    - id_rsa
   #   - id_rsa.pub

  tasks:
  - name: check if key pair exist locally
    stat:
         path: ~/.ssh/id_rsa.pub
     #     path: " ~/.ssh/{{ item }}"
    #with_items: "{{ pairKeys }}"
    register: stat_result

  - name: create pair key locally
    user: name=lynn generate_ssh_key=yes ssh_key_bits=2048 ssh_key_file=.ssh/id_rsa
    when: not stat_result.stat.exists

  - name: copy the generated public key to an accessible location for the next play
    copy:
         src: ~/.ssh/id_rsa.pub
         dest: /tmp/nano2.pub  
 # shell: cp ~ansible_ssh_user/.ssh/id_rsa.pub /tmp/ansible_ssh_user.pub

- hosts: nodes
  gather_facts: no
  tasks:

#  TODO: to see how the final set up is
#  - name: create ansible_ssh_user
#    user: name=ansible_ssh_user groups=group1,group2

  - name: Add RSA public key to the remote host
    authorized_key: user=nano2 key="{{ lookup('file', '/tmp/nano2.pub') }}"

- hosts: master
  become: true
  gather_facts: no
  tasks:

  - name: remove public key from /tmp
    file:
      state: absent
      path: /tmp/nano2.pub
...
